[{"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\index.js":"1","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\App.js":"2","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\reducers\\index.js":"3","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\firebase.js":"4","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\api\\auth.js":"5","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\reducers\\cartReducer.js":"6","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\reducers\\userReducer.js":"7","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\reducers\\searchReducer.js":"8","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\reducers\\drawerReducer.js":"9","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\index.js":"10","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\reducers\\couponReducer.js":"11","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\reducers\\codReducer.js":"12","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\index.js":"13","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\StripeCheckout.js":"14","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\Home.js":"15","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\Cart.js":"16","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\Product.js":"17","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\Shop.js":"18","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\Checkout.js":"19","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\Payment.js":"20","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\nav\\Header.js":"21","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\nav\\UserNav.js":"22","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\forms\\LocalSearch.js":"23","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\forms\\CategoryForm.js":"24","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\routes\\AdminRoute.js":"25","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\nav\\AdminNav.js":"26","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\routes\\UserRoute.js":"27","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\forms\\FileUpload.js":"28","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\forms\\ProductUpdateForm.js":"29","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\forms\\ProductCreateForm.js":"30","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\forms\\Star.js":"31","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\cards\\AdminProductCard.js":"32","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\cards\\Jumbotron.js":"33","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\cards\\ProductCard.js":"34","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\cards\\LoadingCard.js":"35","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\cards\\ProductCardInCheckout.js":"36","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\cards\\SingleProduct.js":"37","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\cards\\ShowPaymentInfo.js":"38","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\home\\NewArrivals.js":"39","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\category\\CategoryList.js":"40","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\home\\BestSellers.js":"41","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\subcategory\\SubcategoryList.js":"42","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\drawer\\SideDrawer.js":"43","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\order\\Invoice.js":"44","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\order\\Orders.js":"45","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\auth\\RegisterComplete.js":"46","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\auth\\Login.js":"47","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\auth\\ForgotPassword.js":"48","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\auth\\Register.js":"49","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\subcategory\\SubcategoryHome.js":"50","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\category\\CategoryHome.js":"51","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\user\\Password.js":"52","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\user\\History.js":"53","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\admin\\AdminDashboard.js":"54","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\user\\Wishlist.js":"55","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\admin\\subcategory\\SubcategoryUpdate.js":"56","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\admin\\category\\CategoryUpdate.js":"57","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\admin\\product\\ProductCreate.js":"58","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\admin\\subcategory\\SubcategoryCreate.js":"59","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\admin\\product\\ProductUpdate.js":"60","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\admin\\coupons\\CreateCoupon.js":"61","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\admin\\category\\CategoryCreate.js":"62","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\admin\\product\\AllProducts.js":"63","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\api\\user.js":"64","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\api\\product.js":"65","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\api\\subcategory.js":"66","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\api\\stripe.js":"67","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\api\\category.js":"68","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\api\\coupon.js":"69","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\api\\admin.js":"70","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\api\\rating.js":"71","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\cards\\ProductListItems.js":"72","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\modal\\RatingModal.js":"73","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\LoadingToRedirect.js":"74","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\forms\\Search.js":"75","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\LoginPage.js":"76","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\ListPage.js":"77"},{"size":589,"mtime":1612545308000,"results":"78","hashOfConfig":"79"},{"size":3983,"mtime":1640008026018,"results":"80","hashOfConfig":"79"},{"size":529,"mtime":1612545308000,"results":"81","hashOfConfig":"79"},{"size":569,"mtime":1612545308000,"results":"82","hashOfConfig":"79"},{"size":636,"mtime":1640007192585,"results":"83","hashOfConfig":"79"},{"size":420,"mtime":1612545308000,"results":"84","hashOfConfig":"79"},{"size":224,"mtime":1612545308000,"results":"85","hashOfConfig":"79"},{"size":201,"mtime":1612545308000,"results":"86","hashOfConfig":"79"},{"size":176,"mtime":1612545308000,"results":"87","hashOfConfig":"79"},{"size":1640,"mtime":1612545308000,"results":"88","hashOfConfig":"79"},{"size":179,"mtime":1612545308000,"results":"89","hashOfConfig":"79"},{"size":169,"mtime":1612545308000,"results":"90","hashOfConfig":"79"},{"size":1566,"mtime":1612545308000,"results":"91","hashOfConfig":"79"},{"size":5308,"mtime":1612545308000,"results":"92","hashOfConfig":"79"},{"size":299,"mtime":1640008086705,"results":"93","hashOfConfig":"79"},{"size":3316,"mtime":1612545308000,"results":"94","hashOfConfig":"79"},{"size":2111,"mtime":1612545308000,"results":"95","hashOfConfig":"79"},{"size":11545,"mtime":1612545308000,"results":"96","hashOfConfig":"79"},{"size":5844,"mtime":1612545308000,"results":"97","hashOfConfig":"79"},{"size":677,"mtime":1612545308000,"results":"98","hashOfConfig":"79"},{"size":2506,"mtime":1612545308000,"results":"99","hashOfConfig":"79"},{"size":644,"mtime":1612545308000,"results":"100","hashOfConfig":"79"},{"size":421,"mtime":1612545308000,"results":"101","hashOfConfig":"79"},{"size":499,"mtime":1612545308000,"results":"102","hashOfConfig":"79"},{"size":841,"mtime":1612545308000,"results":"103","hashOfConfig":"79"},{"size":1242,"mtime":1612545308000,"results":"104","hashOfConfig":"79"},{"size":472,"mtime":1612545308000,"results":"105","hashOfConfig":"79"},{"size":2962,"mtime":1612545308000,"results":"106","hashOfConfig":"79"},{"size":3764,"mtime":1612545308000,"results":"107","hashOfConfig":"79"},{"size":3683,"mtime":1612545308000,"results":"108","hashOfConfig":"79"},{"size":387,"mtime":1612545308000,"results":"109","hashOfConfig":"79"},{"size":1085,"mtime":1612545308000,"results":"110","hashOfConfig":"79"},{"size":269,"mtime":1612545308000,"results":"111","hashOfConfig":"79"},{"size":2626,"mtime":1612545308000,"results":"112","hashOfConfig":"79"},{"size":442,"mtime":1612545308000,"results":"113","hashOfConfig":"79"},{"size":4076,"mtime":1612545308000,"results":"114","hashOfConfig":"79"},{"size":4142,"mtime":1612545308000,"results":"115","hashOfConfig":"79"},{"size":1139,"mtime":1612545308000,"results":"116","hashOfConfig":"79"},{"size":1535,"mtime":1612545308000,"results":"117","hashOfConfig":"79"},{"size":956,"mtime":1612545308000,"results":"118","hashOfConfig":"79"},{"size":1531,"mtime":1612545308000,"results":"119","hashOfConfig":"79"},{"size":1004,"mtime":1612545308000,"results":"120","hashOfConfig":"79"},{"size":1729,"mtime":1612545308000,"results":"121","hashOfConfig":"79"},{"size":2698,"mtime":1612545308000,"results":"122","hashOfConfig":"79"},{"size":2445,"mtime":1612545308000,"results":"123","hashOfConfig":"79"},{"size":2930,"mtime":1612545308000,"results":"124","hashOfConfig":"79"},{"size":4336,"mtime":1640007906947,"results":"125","hashOfConfig":"79"},{"size":1637,"mtime":1612545308000,"results":"126","hashOfConfig":"79"},{"size":2003,"mtime":1640004925659,"results":"127","hashOfConfig":"79"},{"size":1481,"mtime":1612545308000,"results":"128","hashOfConfig":"79"},{"size":1442,"mtime":1612545308000,"results":"129","hashOfConfig":"79"},{"size":1691,"mtime":1612545308000,"results":"130","hashOfConfig":"79"},{"size":2729,"mtime":1612545308000,"results":"131","hashOfConfig":"79"},{"size":1324,"mtime":1612545308000,"results":"132","hashOfConfig":"79"},{"size":1592,"mtime":1612545308000,"results":"133","hashOfConfig":"79"},{"size":2704,"mtime":1612545308000,"results":"134","hashOfConfig":"79"},{"size":1666,"mtime":1612545308000,"results":"135","hashOfConfig":"79"},{"size":3224,"mtime":1612545308000,"results":"136","hashOfConfig":"79"},{"size":4267,"mtime":1612545308000,"results":"137","hashOfConfig":"79"},{"size":4241,"mtime":1612545308000,"results":"138","hashOfConfig":"79"},{"size":4183,"mtime":1612545308000,"results":"139","hashOfConfig":"79"},{"size":3260,"mtime":1612545308000,"results":"140","hashOfConfig":"79"},{"size":1750,"mtime":1612545308000,"results":"141","hashOfConfig":"79"},{"size":2450,"mtime":1612545308000,"results":"142","hashOfConfig":"79"},{"size":1841,"mtime":1612545308000,"results":"143","hashOfConfig":"79"},{"size":1019,"mtime":1612545308000,"results":"144","hashOfConfig":"79"},{"size":271,"mtime":1612545308000,"results":"145","hashOfConfig":"79"},{"size":1104,"mtime":1612545308000,"results":"146","hashOfConfig":"79"},{"size":579,"mtime":1612545308000,"results":"147","hashOfConfig":"79"},{"size":470,"mtime":1612545308000,"results":"148","hashOfConfig":"79"},{"size":796,"mtime":1612545308000,"results":"149","hashOfConfig":"79"},{"size":2064,"mtime":1612545308000,"results":"150","hashOfConfig":"79"},{"size":1249,"mtime":1612545308000,"results":"151","hashOfConfig":"79"},{"size":638,"mtime":1612545308000,"results":"152","hashOfConfig":"79"},{"size":1002,"mtime":1612545308000,"results":"153","hashOfConfig":"79"},{"size":299,"mtime":1640004052479,"results":"154","hashOfConfig":"79"},{"size":2175,"mtime":1640010158591,"results":"155","hashOfConfig":"79"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},"1nnb0gz",{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"158"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"158"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"158"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"158"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"158"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"158"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"158"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"158"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"158"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"158"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"158"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"158"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"158"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"158"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"158"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"158"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"158"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"158"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"158"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"158"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"158"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"330","messages":"331","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\index.js",[],["332","333"],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\App.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\reducers\\index.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\firebase.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\api\\auth.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\reducers\\cartReducer.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\reducers\\userReducer.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\reducers\\searchReducer.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\reducers\\drawerReducer.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\index.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\reducers\\couponReducer.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\reducers\\codReducer.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\index.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\StripeCheckout.js",["334"],"import React, { useState, useEffect } from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createPaymentIntent } from \"../api/stripe\";\nimport { Link } from \"react-router-dom\";\n\nimport { Card } from \"antd\";\nimport { DollarOutlined, CheckOutlined } from \"@ant-design/icons\";\nimport laptop from \"../images/laptop.png\";\n\nimport { createOrder, emptyCart } from \"../api/user\";\n\nconst StripeCheckout = () => {\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState(\"\");\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(\"\");\n\n  const [cartTotal, setCartTotal] = useState(0);\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState(0);\n  const [payable, setPayable] = useState(0);\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const dispatch = useDispatch();\n  const { user, coupon } = useSelector((state) => ({ ...state }));\n\n  useEffect(() => {\n    createPaymentIntent(coupon, user.token)\n      .then((res) => {\n        // console.log(\"CREATE PAYMENT INTENT\", res.data);\n        setClientSecret(res.data.clientSecret);\n        setCartTotal(res.data.cartTotal);\n        setTotalAfterDiscount(res.data.totalAfterDiscount);\n        setPayable(res.data.payable);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setProcessing(true);\n\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: {\n          name: e.target.name.value,\n        },\n      },\n    });\n\n    if (payload.error) {\n      setError(`Payment failed ${payload.error.message}`);\n      setProcessing(false);\n    } else {\n      // Here you get result after successful payment\n      // Create order and save to db for admin to process\n      createOrder(user.token, { stripeResponse: payload }).then((res) => {\n        // console.log(res.data);\n        if (res.data.ok) {\n          // empty user cart from local storage\n          if (typeof window !== \"undefined\") {\n            window.localStorage.removeItem(\"cart\");\n          }\n          // empty user cart from redux store\n          dispatch({\n            type: \"ADD_TO_CART\",\n            payload: [],\n          });\n          // reset coupon to false\n          dispatch({\n            type: \"COUPON_APPLIED\",\n            payload: false,\n          });\n          // empty cart from database\n          emptyCart(user.token);\n        }\n      });\n      // console.log(JSON.stringify(payload, null, 4));\n      setError(null);\n      setProcessing(false);\n      setSucceeded(true);\n    }\n  };\n\n  const handleChange = (e) => {\n    // disable pay button if there are any errors\n    setDisabled(e.empty);\n    // show error messages\n    setError(e.error ? e.error.message : \"\");\n  };\n\n  const cartStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: \"Arial, sans-serif\",\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\",\n        },\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\",\n      },\n    },\n  };\n\n  return (\n    <>\n      {!succeeded && (\n        <div>\n          {coupon && totalAfterDiscount !== undefined ? (\n            <p className=\"alert alert-success\">{`Total after dicount: $${totalAfterDiscount}`}</p>\n          ) : (\n            <p className=\"alert alert-danger\">No Coupon Applied</p>\n          )}\n        </div>\n      )}\n      <div className=\"text-center pb-5\">\n        <Card\n          cover={\n            // eslint-disable-next-line jsx-a11y/alt-text\n            <img\n              src={laptop}\n              style={{\n                height: \"200px\",\n                objectFit: \"cover\",\n                marginBottom: \"-50px\",\n              }}\n            />\n          }\n          actions={[\n            <>\n              <DollarOutlined className=\"text-info\" /> <br /> Total: $\n              {cartTotal}\n            </>,\n            <>\n              <CheckOutlined className=\"text-info\" /> <br /> Payable: $\n              {(payable / 100).toFixed(2)}\n            </>,\n          ]}\n        />\n      </div>\n      <form id=\"payment-form\" className=\"stripe-form\" onSubmit={handleSubmit}>\n        <CardElement\n          id=\"cart-element\"\n          options={cartStyle}\n          onChange={handleChange}\n        />\n        <button\n          className=\"stripe-button\"\n          disabled={processing || disabled || succeeded}\n        >\n          <span id=\"button-text\">\n            {processing ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay\"}\n          </span>\n        </button>\n        <br />\n        {error && (\n          <div className=\"text-danger\" role=\"alert\">\n            {error}\n          </div>\n        )}\n\n        <br />\n        <p className={succeeded ? \"result-message\" : \"result-message hidden\"}>\n          Payment Successful.{\" \"}\n          <Link to=\"/user/history\">Check in your purchase history</Link>\n        </p>\n      </form>\n    </>\n  );\n};\n\nexport default StripeCheckout;\n","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\Home.js",["335","336","337","338","339"],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\Cart.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\Product.js",["340","341"],"import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getProduct, updateProductRating, listRelated } from \"../api/product\";\nimport { SingleProduct, ProductCard } from \"../components\";\nimport { useSelector } from \"react-redux\";\n\nconst Product = () => {\n  const [product, setProduct] = useState(\"\");\n  const [relatedProducts, setRelatedProducts] = useState([]);\n  const [star, setStar] = useState(0);\n  const { slug } = useParams();\n  const { user } = useSelector((state) => ({ ...state }));\n\n  useEffect(() => {\n    loadSingleProduct();\n  }, [slug]);\n\n  useEffect(() => {\n    if (product.ratings && user) {\n      let existingRatingObject = product.ratings.find(\n        (ele) => ele.postedBy.toString() === user._id.toString()\n      );\n      existingRatingObject && setStar(existingRatingObject.star);\n    }\n  });\n\n  const loadSingleProduct = () => {\n    getProduct(slug).then((res) => {\n      setProduct(res.data);\n      // Load related product\n      listRelated(res.data._id).then((res) => {\n        setRelatedProducts(res.data);\n      });\n    });\n  };\n\n  const handleChangeRating = (newRating, name) => {\n    setStar(newRating);\n    updateProductRating(user.token, name, newRating).then((res) => {\n      loadSingleProduct();\n    });\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row pt-4\">\n        <SingleProduct\n          product={product}\n          star={star}\n          handleChangeRating={handleChangeRating}\n        />\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col text-center pt-5 pb-5\">\n          <hr />\n          <h4>Related Products</h4>\n          <hr />\n        </div>\n      </div>\n\n      <div className=\"row pb-5\">\n        {relatedProducts.length ? (\n          relatedProducts.map((relProd) => (\n            <div key={relProd._id} className=\"col-md-4\">\n              <ProductCard product={relProd} />\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center col\">NO RELATED PRODUCTS FOUND</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Product;\n","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\Shop.js",["342","343","344","345","346","347","348"],"import React, { useState, useEffect } from \"react\";\nimport { getProductsByCount, searchFilter } from \"../api/product\";\nimport { getCategories } from \"../api/category\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ProductCard, Star } from \"../components\";\nimport { Menu, Slider, Checkbox, Radio } from \"antd\";\nimport {\n  DollarOutlined,\n  DownSquareOutlined,\n  StarOutlined,\n} from \"@ant-design/icons\";\nimport { getSubcategories } from \"../api/subcategory\";\n\nconst { SubMenu, ItemGroup } = Menu;\n\nconst Shop = () => {\n  const [products, setProducts] = useState([]);\n  const [price, setPrice] = useState([0, 0]);\n  const [loading, setLoading] = useState(false);\n  const [ok, setOk] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [checkedCategories, setCheckedCategories] = useState([]);\n  const [subCategories, setSubCategories] = useState([]);\n  const [checkedSubCategories, setCheckedSubCategories] = useState([]);\n  const [star, setStar] = useState(\"\");\n  const [brands, setBrands] = useState([\n    \"Apple\",\n    \"Lenovo\",\n    \"Samsung\",\n    \"Microsoft\",\n    \"ASUS\",\n    \"MSI\",\n    \"HP\",\n    \"Acer\",\n  ]);\n  const [clickedBrand, setClickedBrand] = useState(\"\");\n  const [colors, setColors] = useState([\n    \"Black\",\n    \"Brown\",\n    \"Silver\",\n    \"Blue\",\n    \"White\",\n  ]);\n  const [checkedColor, setCheckedColor] = useState(\"\");\n  const [shipping, setShipping] = useState([\"Yes\", \"No\"]);\n  const [checkedShipping, setCheckedShipping] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const { search } = useSelector((state) => ({ ...state }));\n  const { text } = search;\n\n  useEffect(() => {\n    loadAllProducts(10);\n    //fetch categories\n    getCategories().then((res) => {\n      setCategories(res.data);\n    });\n    // fetch subcategories\n    getSubcategories().then((res) => {\n      setSubCategories(res.data);\n    });\n  }, []);\n\n  // 1. Load products on page load\n  const loadAllProducts = (count) => {\n    setLoading(true);\n    getProductsByCount(count)\n      .then((res) => {\n        setLoading(false);\n        setProducts(res.data);\n      })\n      .catch((error) => {\n        setLoading(false);\n        console.log(error);\n      });\n  };\n\n  const fetchProductsByFilter = (arg) => {\n    setLoading(true);\n    searchFilter(arg).then((res) => {\n      setProducts(res.data);\n      setLoading(false);\n    });\n  };\n\n  // 2. Load product from search filter\n  useEffect(() => {\n    // add slight delay, to prevent request on every key\n    const delay = setTimeout(() => {\n      fetchProductsByFilter({ query: text });\n      if (!text) {\n        loadAllProducts();\n      }\n    }, 300);\n    return () => clearTimeout(delay);\n  }, [text]);\n\n  // 3. Fetch products by price range\n  useEffect(() => {\n    fetchProductsByFilter({ price: price });\n  }, [ok]);\n\n  const handleSlider = (val) => {\n    // Clear other filters\n    dispatch({ type: \"SEARCH_QUERY\", payload: { text: \"\" } });\n    setCheckedCategories([]);\n    setStar(\"\");\n    setCheckedSubCategories([]);\n    setClickedBrand(\"\");\n    setCheckedColor(\"\");\n    setCheckedShipping(\"\");\n\n    setPrice(val);\n    setTimeout(() => {\n      setOk(!ok);\n    }, 300);\n  };\n\n  // 4. Load products based on category\n  // show category list to user\n  const showCategories = () =>\n    categories.map((c) => (\n      <div key={c._id}>\n        <Checkbox\n          onChange={handleCheck}\n          className=\"pb-2 pl-4 pr-4\"\n          value={c._id}\n          name=\"category\"\n          checked={checkedCategories.includes(c._id)}\n        >\n          {c.name}\n        </Checkbox>\n        <br />\n      </div>\n    ));\n\n  // handle check for checkboxes\n  const handleCheck = (e) => {\n    // clear other filter values\n    dispatch({ type: \"SEARCH_QUERY\", payload: { text: \"\" } });\n    setPrice([0, 0]);\n    setStar(\"\");\n    setCheckedSubCategories([]);\n    setClickedBrand(\"\");\n    setCheckedColor(\"\");\n    setCheckedShipping(\"\");\n\n    let inTheState = [...checkedCategories];\n    let justChecked = e.target.value;\n    let foundInTheState = inTheState.indexOf(justChecked);\n\n    if (foundInTheState === -1) {\n      inTheState.push(justChecked);\n    } else {\n      inTheState.splice(foundInTheState, 1);\n    }\n\n    setCheckedCategories(inTheState);\n    fetchProductsByFilter({ category: inTheState });\n  };\n\n  // 5. Show products by star rating\n  const showStars = () => (\n    <div className=\"pr-4 pl-4 pb-2\">\n      <Star starClick={handleStarClick} numberOfStars={5} />\n      <Star starClick={handleStarClick} numberOfStars={4} />\n      <Star starClick={handleStarClick} numberOfStars={3} />\n      <Star starClick={handleStarClick} numberOfStars={2} />\n      <Star starClick={handleStarClick} numberOfStars={1} />\n    </div>\n  );\n\n  const handleStarClick = (num) => {\n    // clear other filter values\n    dispatch({ type: \"SEARCH_QUERY\", payload: { text: \"\" } });\n    setPrice([0, 0]);\n    setCheckedCategories([]);\n    setCheckedSubCategories([]);\n    setClickedBrand(\"\");\n    setCheckedColor(\"\");\n    setCheckedShipping(\"\");\n\n    setStar(num);\n    fetchProductsByFilter({ stars: num });\n  };\n\n  // 6. Show products by sub category\n  const showSubCategories = () =>\n    subCategories.map((s) => (\n      <div\n        key={s._id}\n        className=\"p-1 m-1 badge badge-secondary\"\n        onClick={() => handleSubCatSubmit(s)}\n        style={{ cursor: \"pointer\" }}\n      >\n        {s.name}\n      </div>\n    ));\n\n  const handleSubCatSubmit = (s) => {\n    // clear other filter values\n    dispatch({ type: \"SEARCH_QUERY\", payload: { text: \"\" } });\n    setPrice([0, 0]);\n    setCheckedCategories([]);\n    setStar(\"\");\n    setClickedBrand(\"\");\n    setCheckedColor(\"\");\n    setCheckedShipping(\"\");\n\n    setCheckedSubCategories(s);\n    fetchProductsByFilter({ subcategory: s });\n  };\n\n  // 7. Show products by brands\n  const showBrands = () =>\n    brands.map((br) => (\n      <Radio\n        key={br}\n        value={br}\n        name={br}\n        checked={br === clickedBrand}\n        onChange={handleBrandSubmit}\n        className=\"pb-2 pl-4 pr-4\"\n      >\n        {br}\n      </Radio>\n    ));\n\n  const handleBrandSubmit = (e) => {\n    // clear other filter values\n    dispatch({ type: \"SEARCH_QUERY\", payload: { text: \"\" } });\n    setPrice([0, 0]);\n    setCheckedCategories([]);\n    setCheckedSubCategories([]);\n    setStar(\"\");\n    setCheckedColor(\"\");\n    setCheckedShipping(\"\");\n\n    setClickedBrand(e.target.value);\n    fetchProductsByFilter({ brand: e.target.value });\n  };\n\n  // 8. Filter products by color\n  const showColors = () =>\n    colors.map((c) => (\n      <Radio\n        value={c}\n        name={c}\n        key={c}\n        checked={c === checkedColor}\n        onChange={handleColorSubmit}\n        className=\"pb-1 pl-4 pr-4\"\n      >\n        {c}\n      </Radio>\n    ));\n\n  const handleColorSubmit = (e) => {\n    // clear other filter values\n    dispatch({ type: \"SEARCH_QUERY\", payload: { text: \"\" } });\n    setPrice([0, 0]);\n    setCheckedCategories([]);\n    setCheckedSubCategories([]);\n    setStar(\"\");\n    setCheckedShipping(\"\");\n\n    setCheckedColor(e.target.value);\n    fetchProductsByFilter({ color: e.target.value });\n  };\n\n  // 9. Filter products by shipping\n  const showShipping = () =>\n    shipping.map((s) => (\n      <Radio\n        value={s}\n        name={s}\n        key={s}\n        checked={s === checkedShipping}\n        onChange={handleShippingSubmit}\n        className=\"pb-1 pl-4 pr-4\"\n      >\n        {s}\n      </Radio>\n    ));\n\n  const handleShippingSubmit = (e) => {\n    // clear other filter values\n    dispatch({ type: \"SEARCH_QUERY\", payload: { text: \"\" } });\n    setPrice([0, 0]);\n    setCheckedCategories([]);\n    setCheckedSubCategories([]);\n    setStar(\"\");\n    setCheckedColor(\"\");\n\n    setCheckedShipping(e.target.value);\n    fetchProductsByFilter({ shipping: e.target.value });\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-3 pt-2\">\n          <h4>Search/Filter</h4>\n          <hr />\n\n          <Menu\n            mode=\"inline\"\n            defaultOpenKeys={[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"]}\n          >\n            {/* Price */}\n            <SubMenu\n              key=\"1\"\n              title={\n                <span className=\"h6\">\n                  <DollarOutlined />\n                  Price\n                </span>\n              }\n            >\n              <div>\n                <Slider\n                  className=\"ml-4 mr-4\"\n                  tipFormatter={(val) => `$${val}`}\n                  range\n                  value={price}\n                  onChange={handleSlider}\n                  max=\"4999\"\n                />\n              </div>\n            </SubMenu>\n\n            {/* Categories */}\n            <SubMenu\n              key=\"2\"\n              title={\n                <span className=\"h6\">\n                  <DownSquareOutlined />\n                  Categories\n                </span>\n              }\n            >\n              <div style={{ marginTop: \"-10px\" }}>{showCategories()}</div>\n            </SubMenu>\n\n            {/* Ratings */}\n            <SubMenu\n              key=\"3\"\n              title={\n                <span className=\"h6\">\n                  <StarOutlined />\n                  Rating\n                </span>\n              }\n            >\n              <div style={{ marginTop: \"-10px\" }}>{showStars()}</div>\n            </SubMenu>\n\n            {/* Subcategories */}\n            <SubMenu\n              key=\"4\"\n              title={\n                <span className=\"h6\">\n                  <DownSquareOutlined />\n                  Sub-Categories\n                </span>\n              }\n            >\n              <div className=\"pl-4 pr-4\" style={{ marginTop: \"-10px\" }}>\n                {showSubCategories()}\n              </div>\n            </SubMenu>\n\n            {/* Brands */}\n            <SubMenu\n              key=\"5\"\n              title={\n                <span className=\"h6\">\n                  <DownSquareOutlined />\n                  Brands\n                </span>\n              }\n            >\n              <div className=\"h6\" style={{ marginTop: \"-10px\" }}>\n                {showBrands()}\n              </div>\n            </SubMenu>\n\n            {/* Colors */}\n            <SubMenu\n              key=\"6\"\n              title={\n                <span className=\"h6\">\n                  <DownSquareOutlined />\n                  Color\n                </span>\n              }\n            >\n              <div className=\"h6\" style={{ marginTop: \"-10px\" }}>\n                {showColors()}\n              </div>\n            </SubMenu>\n\n            {/* Colors */}\n            <SubMenu\n              key=\"7\"\n              title={\n                <span className=\"h6\">\n                  <DownSquareOutlined />\n                  Shipping\n                </span>\n              }\n            >\n              <div className=\"h6\" style={{ marginTop: \"-10px\" }}>\n                {showShipping()}\n              </div>\n            </SubMenu>\n          </Menu>\n        </div>\n\n        <div className=\"col-md-9 pt-2\">\n          {loading ? (\n            <h4 className=\"text-danger\">Loading...</h4>\n          ) : (\n            <h4 className=\"text-danger\">Products</h4>\n          )}\n\n          {products.length < 1 && <p>No Products Found</p>}\n\n          <div className=\"row pb-5\">\n            {products.map((p) => (\n              <div key={p._id} className=\"col-md-4 mt-3\">\n                <ProductCard product={p} />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Shop;\n","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\Checkout.js",["349"],"import React, { useState, useEffect } from \"react\";\nimport {\n  getUserCart,\n  emptyCart,\n  saveUserAddress,\n  applyCoupon,\n  createCodOrder,\n} from \"../api/user\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n\nconst Checkout = ({ history }) => {\n  const dispatch = useDispatch();\n  const [products, setProducts] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [discountTotal, setDiscountTotal] = useState(0);\n  const [discountError, setDiscountError] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [addressSaved, setAddressSaved] = useState(false);\n  const [coupon, setCoupon] = useState(\"\");\n\n  const { user, cod } = useSelector((state) => ({ ...state }));\n  const couponTrueOrFalse = useSelector((state) => state.coupon);\n\n  useEffect(() => {\n    getUserCart(user.token).then((res) => {\n      // console.log(res.data);\n      setProducts(res.data.products);\n      setTotal(res.data.cartTotal);\n    });\n  }, []);\n\n  const handleEmptyCart = () => {\n    // remove from local storage\n    if (typeof window !== \"undefined\") {\n      localStorage.removeItem(\"cart\");\n    }\n\n    // remove from redux\n    dispatch({\n      type: \"ADD_TO_CART\",\n      payload: [],\n    });\n\n    // remove from backend\n    emptyCart(user.token).then((res) => {\n      setProducts([]);\n      setTotal(0);\n      toast.success(\"Cart is empty. Continue Shopping!\");\n    });\n\n    // clear discounts\n    setDiscountTotal(0);\n    setCoupon(\"\");\n  };\n\n  const saveAddressToDb = () => {\n    // console.log(address);\n    saveUserAddress(address, user.token).then((res) => {\n      if (res.data.ok) {\n        setAddressSaved(true);\n        toast.success(\"Address Saved\");\n      }\n    });\n  };\n\n  const showAddress = () => (\n    <>\n      <ReactQuill theme=\"snow\" value={address} onChange={setAddress} />\n      <button className=\"btn btn-primary mt-2\" onClick={saveAddressToDb}>\n        Save\n      </button>\n    </>\n  );\n\n  const showProductSummary = () => (\n    <>\n      {products.map((p, i) => (\n        <div key={i}>\n          <p>\n            {p.product.title} ({p.color}) x {p.count} = {p.product.price}\n          </p>\n        </div>\n      ))}\n    </>\n  );\n\n  const handleApplyCoupon = () => {\n    // console.log(\"SEND THIS COUPON TO SERVER\", coupon);\n    applyCoupon(coupon, user.token).then((res) => {\n      console.log(\"RES ON COUPON APPLIED\", res.data);\n      if (res.data) {\n        setDiscountTotal(res.data);\n        // update redux coupon applied to true/false\n        dispatch({\n          type: \"COUPON_APPLIED\",\n          payload: true,\n        });\n      }\n\n      if (res.data.err) {\n        setDiscountError(res.data.err);\n        // update redux coupon applied to true/false\n        dispatch({\n          type: \"COUPON_APPLIED\",\n          payload: false,\n        });\n      }\n    });\n  };\n\n  const showApplyCoupon = () => (\n    <>\n      <input\n        onChange={(e) => {\n          setDiscountError(\"\");\n          setCoupon(e.target.value);\n        }}\n        type=\"text\"\n        className=\"form-control\"\n        value={coupon}\n      />\n      <button onClick={handleApplyCoupon} className=\"btn btn-primary mt-2\">\n        Apply\n      </button>\n    </>\n  );\n\n  const createCOD = () => {\n    createCodOrder(user.token, cod, couponTrueOrFalse).then((res) => {\n      // console.log(\"COD ORDER CREATE RESPONSE\", res.data);\n      if (res.data.ok) {\n        // empty user cart from local storage\n        if (typeof window !== \"undefined\") {\n          window.localStorage.removeItem(\"cart\");\n        }\n        // empty user cart from redux store\n        dispatch({\n          type: \"ADD_TO_CART\",\n          payload: [],\n        });\n        // reset coupon to false\n        dispatch({\n          type: \"COUPON_APPLIED\",\n          payload: false,\n        });\n        // empty cod redux\n        dispatch({\n          type: \"SET_COD\",\n          payload: false,\n        });\n        // empty cart from database\n        emptyCart(user.token);\n        // redirect user\n        setTimeout(() => {\n          history.push(\"/user/history\");\n        }, 1000);\n      }\n    });\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-6\">\n        <h4>Delivery Address</h4>\n        <br />\n        <br />\n        {showAddress()}\n        <hr />\n        <h4>Got Coupon?</h4>\n        <br />\n        {showApplyCoupon()}\n        <br />\n        {discountError && <p className=\"bg-danger p-2\">{discountError}</p>}\n      </div>\n\n      <div className=\"col-md-6\">\n        <h4>Order Summary</h4>\n        <hr />\n        <p>Products - {products.length}</p>\n        <hr />\n        {showProductSummary()}\n        <hr />\n        <p>Cart Total: ${total}</p>\n\n        {discountTotal > 0 && (\n          <p className=\"bg-success p-2\">Discount Applied: ${discountTotal}</p>\n        )}\n\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            {cod ? (\n              <button\n                disabled={!addressSaved || !products.length}\n                className=\"btn btn-primary\"\n                onClick={createCOD}\n              >\n                Place Order\n              </button>\n            ) : (\n              <button\n                disabled={!addressSaved || !products.length}\n                className=\"btn btn-primary\"\n                onClick={() => history.push(\"/payment\")}\n              >\n                Place Order\n              </button>\n            )}\n          </div>\n\n          <div className=\"col-md-6\">\n            <button\n              disabled={!products.length}\n              onClick={handleEmptyCart}\n              className=\"btn btn-primary\"\n            >\n              Empty Cart\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Checkout;\n","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\Payment.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\nav\\Header.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\nav\\UserNav.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\forms\\LocalSearch.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\forms\\CategoryForm.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\routes\\AdminRoute.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\nav\\AdminNav.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\routes\\UserRoute.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\forms\\FileUpload.js",["350"],"import React from \"react\";\nimport Resizer from \"react-image-file-resizer\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { Avatar, Badge } from \"antd\";\nimport { toast } from \"react-toastify\";\n\nconst FileUpload = ({ values, setValues, setLoading }) => {\n  const { user } = useSelector((state) => ({ ...state }));\n\n  const fileUploadAndResize = (e) => {\n    // console.log(e.target.files);\n    // resize the image\n    const files = e.target.files;\n\n    if (files) {\n      setLoading(true);\n\n      let allUploadedFiles = values.images;\n\n      for (let i = 0; i < files.length; i++) {\n        Resizer.imageFileResizer(\n          files[i],\n          720,\n          720,\n          \"JPEG\",\n          100,\n          0,\n          (uri) => {\n            // send the image to server to upload to cloudinary\n            axios\n              .post(\n                `${process.env.REACT_APP_BACKEND_API}/uploadimages`,\n                { image: uri },\n                {\n                  headers: {\n                    authtoken: user ? user.token : \"\",\n                  },\n                }\n              )\n              .then((res) => {\n                setLoading(false);\n                allUploadedFiles.push(res.data);\n                // set url to images[] in parent component\n                setValues({ ...values, images: allUploadedFiles });\n              })\n              .catch((err) => {\n                setLoading(false);\n                console.log(err);\n              });\n          },\n          \"base64\"\n        );\n      }\n    }\n  };\n\n  const handleRemoveImage = (id) => {\n    setLoading(true);\n    axios\n      .post(\n        `${process.env.REACT_APP_BACKEND_API}/removeimage`,\n        { public_id: id },\n        {\n          headers: {\n            authtoken: user.token,\n          },\n        }\n      )\n      .then((res) => {\n        setLoading(false);\n        const { images } = values;\n        let filteredImages = images.filter((image) => {\n          return image.public_id !== id;\n        });\n        setValues({ ...values, images: filteredImages });\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n      });\n  };\n\n  return (\n    <>\n      <div className=\"row\">\n        {values.images &&\n          values.images.map((i) => (\n            <Badge\n              count=\"X\"\n              key={i.public_id}\n              onClick={() => handleRemoveImage(i.public_id)}\n              style={{ cursor: \"pointer\" }}\n            >\n              <Avatar src={i.url} size={100} className=\"m-3\" shape=\"square\" />\n            </Badge>\n          ))}\n      </div>\n      <div className=\"row\">\n        <label className=\"btn btn-primary btn-raised\">\n          Choose File\n          <input\n            type=\"file\"\n            multiple\n            accept=\"images/*\"\n            onChange={fileUploadAndResize}\n            hidden\n          />\n        </label>\n      </div>\n    </>\n  );\n};\n\nexport default FileUpload;\n","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\forms\\ProductUpdateForm.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\forms\\ProductCreateForm.js",["351","352","353","354","355"],"import React from \"react\";\nimport { Select } from \"antd\";\n\nconst { Option } = Select;\n\nconst ProductCreateForm = ({\n  handleSubmit,\n  handleChange,\n  handleCatChange,\n  values,\n  subOptions,\n  handleSetSubs,\n  showSub,\n}) => {\n  const {\n    title,\n    description,\n    price,\n    categories,\n    category,\n    subcategories,\n    shipping,\n    quantity,\n    images,\n    colors,\n    brands,\n    color,\n    brand,\n  } = values;\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label>Title</label>\n        <input\n          type=\"text\"\n          name=\"title\"\n          className=\"form-control\"\n          value={title}\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <label>Description</label>\n        <input\n          type=\"text\"\n          name=\"description\"\n          className=\"form-control\"\n          value={description}\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <label>Price</label>\n        <input\n          type=\"number\"\n          name=\"price\"\n          className=\"form-control\"\n          value={price}\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <label>Shipping</label>\n        <select\n          name=\"shipping\"\n          className=\"form-control\"\n          onChange={handleChange}\n        >\n          <option value=\"\">Please Select</option>\n          <option value=\"Yes\">Yes</option>\n          <option value=\"No\">No</option>\n        </select>\n      </div>\n\n      <div className=\"form-group\">\n        <label>Quantity</label>\n        <input\n          type=\"number\"\n          name=\"quantity\"\n          className=\"form-control\"\n          value={quantity}\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <label>Color</label>\n        <select name=\"color\" className=\"form-control\" onChange={handleChange}>\n          <option>Please Select</option>\n\n          {colors.map((c) => (\n            <option key={c} value={c}>\n              {c}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"form-group\">\n        <label>Brand</label>\n        <select name=\"brand\" className=\"form-control\" onChange={handleChange}>\n          <option>Please Select</option>\n\n          {brands.map((c) => (\n            <option key={c} value={c}>\n              {c}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"form-group\">\n        <label>Category</label>\n        <select\n          name=\"category\"\n          className=\"form-control\"\n          onChange={handleCatChange}\n          select={false}\n        >\n          <option>Select Category</option>\n          {categories.length &&\n            categories.map((c) => (\n              <option key={c._id} value={c._id}>\n                {c.name}\n              </option>\n            ))}\n        </select>\n      </div>\n\n      {showSub && (\n        <div className=\"form-group\">\n          <label>Sub Category</label>\n          <Select\n            mode=\"multiple\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Please Select\"\n            value={subcategories}\n            name=\"subcategories\"\n            onChange={handleSetSubs}\n          >\n            {subOptions.length &&\n              subOptions.map((c) => (\n                <Option key={c._id} value={c._id}>\n                  {c.name}\n                </Option>\n              ))}\n          </Select>\n        </div>\n      )}\n\n      <br />\n\n      <button className=\"btn btn-outline-info\">Save</button>\n    </form>\n  );\n};\n\nexport default ProductCreateForm;\n","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\forms\\Star.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\cards\\AdminProductCard.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\cards\\Jumbotron.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\cards\\ProductCard.js",["356","357","358"],"import React, { useState } from \"react\";\nimport { Card, Tooltip } from \"antd\";\nimport { EyeOutlined, ShoppingCartOutlined } from \"@ant-design/icons\";\nimport laptop from \"../../images/laptop.png\";\nimport { Link } from \"react-router-dom\";\nimport { showAverage } from \"../../api/rating\";\nimport _ from \"lodash\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst { Meta } = Card;\n\nconst ProductCard = ({ product }) => {\n  const [tooltip, setTooltip] = useState(\"Click to add\");\n  const { title, description, images, slug, price, quantity } = product;\n\n  // redux\n  const dispatch = useDispatch();\n  const { cart, user } = useSelector((state) => ({ ...state }));\n\n  const handleAddToCart = () => {\n    // create cart array\n    let cart = [];\n    if (typeof window !== \"undefined\") {\n      // if cart is in localstorage, get it\n      if (localStorage.getItem(\"cart\")) {\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\n      }\n      // push new product to cart\n      cart.push({\n        ...product,\n        count: 1,\n      });\n      // remove duplicates\n      let unique = _.uniqWith(cart, _.isEqual);\n      // save item to local storage\n      // console.log(unique)\n      localStorage.setItem(\"cart\", JSON.stringify(unique));\n      // Show tooltip\n      setTooltip(\"Added\");\n\n      // add to redux state\n      dispatch({\n        type: \"ADD_TO_CART\",\n        payload: unique,\n      });\n\n      // show cart items in side drawer\n      dispatch({\n        type: \"SET_VISIBLE\",\n        payload: true,\n      });\n    }\n  };\n\n  return (\n    <>\n      {product && product.ratings && product.ratings.length ? (\n        showAverage(product)\n      ) : (\n        <div className=\"text-center pt-1 pb-3\">No ratings yet</div>\n      )}\n      <Card\n        cover={\n          <img\n            src={images && images.length ? images[0].url : laptop}\n            style={{ height: \"150px\", objectFit: \"cover\" }}\n            className=\"p-1\"\n            alt={\"laptop\"}\n          />\n        }\n        actions={[\n          <Link to={`/product/${slug}`}>\n            <EyeOutlined className=\"text-warning\" /> <br /> View Product\n          </Link>,\n          <Tooltip title={tooltip}>\n            <a onClick={handleAddToCart} disabled={quantity < 1}>\n              <ShoppingCartOutlined className=\"text-danger\" />\n              <br /> {quantity < 1 ? \"Out of stock\" : \"Add to cart\"}\n            </a>\n          </Tooltip>,\n        ]}\n      >\n        <Meta\n          title={`${title} - $${price}`}\n          description={`${description && description.substring(0, 50)}...`}\n        />\n      </Card>\n    </>\n  );\n};\n\nexport default ProductCard;\n","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\cards\\LoadingCard.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\cards\\ProductCardInCheckout.js",["359","360"],"import React, { useState } from \"react\";\nimport ModalImage from \"react-modal-image\";\nimport laptop from \"../../images/laptop.png\";\nimport { useDispatch } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport {\n  CheckCircleOutlined,\n  ClockCircleOutlined,\n  CloseOutlined,\n} from \"@ant-design/icons\";\n\nconst ProductCardInCheckout = ({ product }) => {\n  const colors = [\"Black\", \"Brown\", \"Silver\", \"Blue\", \"White\"];\n  const [quantity, setQuantity] = useState(product.count);\n  const dispatch = useDispatch();\n\n  const handleColorChange = (e) => {\n    // console.log(\"COLOR CHANGE\", e.target.value);\n    let cart = [];\n\n    if (typeof window !== \"undefined\") {\n      if (localStorage.getItem(\"cart\")) {\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\n      }\n\n      cart.map((pr, index) => {\n        if (pr._id === product._id) {\n          cart[index].color = e.target.value;\n        }\n      });\n\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n      dispatch({\n        type: \"ADD_TO_CART\",\n        payload: cart,\n      });\n    }\n  };\n\n  const handleQuantityChange = (e) => {\n    setQuantity(e.target.value);\n\n    let cart = [];\n\n    if (e.target.value > product.quantity) {\n      toast.error(`Max available quantity is ${product.quantity}`);\n      return;\n    }\n\n    if (typeof window !== \"undefined\") {\n      if (localStorage.getItem(\"cart\")) {\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\n      }\n\n      cart.map((pr, index) => {\n        if (pr._id === product._id) {\n          cart[index].count = e.target.value;\n        }\n      });\n\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n      dispatch({\n        type: \"ADD_TO_CART\",\n        payload: cart,\n      });\n    }\n  };\n\n  const handleProductRemove = () => {\n    let cart = [];\n\n    if (typeof window !== \"undefined\") {\n      if (localStorage.getItem(\"cart\")) {\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\n      }\n\n      // eslint-disable-next-line array-callback-return\n      cart.map((pr, index) => {\n        if (pr._id === product._id) {\n          cart.splice(index, 1);\n        }\n      });\n\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n      dispatch({\n        type: \"ADD_TO_CART\",\n        payload: cart,\n      });\n    }\n  };\n\n  return (\n    <tbody>\n      <tr>\n        <td>\n          <div style={{ width: \"100px\", height: \"auto\", alignItems: \"center\" }}>\n            {product.images.length ? (\n              <ModalImage\n                small={product.images[0].url}\n                large={product.images[0].url}\n              />\n            ) : (\n              <ModalImage small={laptop} large={laptop} />\n            )}\n          </div>\n        </td>\n        <td>{product.title}</td>\n        <td>$ {product.price}</td>\n        <td>{product.brand}</td>\n        <td>\n          <select\n            name=\"color\"\n            onChange={handleColorChange}\n            className=\"form-control\"\n          >\n            {product.color ? (\n              <option value={product.color}>{product.color}</option>\n            ) : (\n              <option>Select</option>\n            )}\n            {colors\n              .filter((c) => c !== product.color)\n              .map((c) => (\n                <option key={c} value={c}>\n                  {c}\n                </option>\n              ))}\n          </select>\n        </td>\n        <td className=\"text-center\">\n          <input\n            type=\"number\"\n            min=\"1\"\n            className=\"form-control\"\n            value={quantity}\n            onChange={handleQuantityChange}\n          />\n        </td>\n        <td className=\"text-center\">\n          {product.shipping === \"Yes\" ? (\n            <CheckCircleOutlined className=\"text-success\" />\n          ) : (\n            <ClockCircleOutlined className=\"text-danger\" />\n          )}\n        </td>\n        <td className=\"text-center\">\n          <CloseOutlined\n            onClick={handleProductRemove}\n            className=\"text-danger pointer\"\n          />\n        </td>\n      </tr>\n    </tbody>\n  );\n};\n\nexport default ProductCardInCheckout;\n","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\cards\\SingleProduct.js",["361","362","363","364","365"],"import React, { useState } from \"react\";\nimport { Card, Tabs, Tooltip } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { HeartOutlined, ShoppingCartOutlined } from \"@ant-design/icons\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from \"react-responsive-carousel\";\nimport Laptop from \"../../images/laptop.png\";\nimport ProductListItems from \"./ProductListItems\";\nimport StarRatings from \"react-star-ratings\";\nimport { showAverage } from \"../../api/rating\";\nimport _ from \"lodash\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addWishlist, removeWishlist } from \"../../api/user\";\n\n// modal component\nimport RatingModal from \"../modal/RatingModal\";\nimport { toast } from \"react-toastify\";\n\nconst { TabPane } = Tabs;\n\nconst SingleProduct = ({ product, star, handleChangeRating }) => {\n  const history = useHistory();\n  const { title, images, description, _id, quantity } = product;\n  const [tooltip, setTooltip] = useState(\"Click to add\");\n\n  // redux\n  const dispatch = useDispatch();\n  const { cart, user } = useSelector((state) => ({ ...state }));\n\n  const handleAddToCart = () => {\n    // create cart array\n    let cart = [];\n    if (typeof window !== \"undefined\") {\n      // if cart is in local storage, get it\n      if (localStorage.getItem(\"cart\")) {\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\n      }\n      // push new product to cart\n      cart.push({\n        ...product,\n        count: 1,\n      });\n      // remove duplicates\n      let unique = _.uniqWith(cart, _.isEqual);\n      // save item to local storage\n      // console.log(unique)\n      localStorage.setItem(\"cart\", JSON.stringify(unique));\n      // Show tooltip\n      setTooltip(\"Added\");\n\n      // add to redux state\n      dispatch({\n        type: \"ADD_TO_CART\",\n        payload: unique,\n      });\n\n      // show cart items in side drawer\n      dispatch({\n        type: \"SET_VISIBLE\",\n        payload: true,\n      });\n    }\n  };\n\n  const handleAddToWishlist = (e) => {\n    e.preventDefault();\n\n    addWishlist(_id, user.token).then((res) => {\n      toast.success(`${title} added to wishlist`);\n      history.push(\"/user/wishlist\");\n    });\n  };\n\n  return (\n    <>\n      <div className=\"col-md-7\">\n        <Carousel showArrows={true} autoPlay infiniteLoop>\n          {images && images.length ? (\n            images.map((i) => <img src={i.url} alt=\"img1\" key={i.public_id} />)\n          ) : (\n            <Card\n              cover={\n                <img src={Laptop} className=\"mb-3 card-image\" alt={\"laptop\"} />\n              }\n            ></Card>\n          )}\n        </Carousel>\n        <Tabs type=\"card\">\n          <TabPane tab=\"Description\" key=\"1\">\n            {description && description}\n          </TabPane>\n\n          <TabPane tab=\"More\" key=\"2\">\n            Contact us on XXXX-XXXX-XX for more info\n          </TabPane>\n        </Tabs>\n      </div>\n\n      <div className=\"col-md-5\">\n        <h1 className=\"bg-info p-3\">{title}</h1>\n        {product && product.ratings && product.ratings.length ? (\n          showAverage(product)\n        ) : (\n          <div className=\"text-center pt-1 pb-3\">No ratings yet</div>\n        )}\n\n        <Card\n          actions={[\n            <Tooltip title={tooltip}>\n              <a onClick={handleAddToCart} disabled={quantity < 1}>\n                <ShoppingCartOutlined className=\"text-danger\" />\n                <br /> {quantity < 1 ? \"Out of stock\" : \"Add to cart\"}\n              </a>\n            </Tooltip>,\n            <a onClick={handleAddToWishlist}>\n              <HeartOutlined className=\"text-info\" /> <br /> Add to Wishlist\n            </a>,\n            <RatingModal>\n              <StarRatings\n                starRatedColor=\"gold\"\n                numberOfStars={5}\n                changeRating={handleChangeRating}\n                rating={star}\n                name={_id}\n                isSelectable={true}\n              />\n            </RatingModal>,\n          ]}\n        >\n          <ProductListItems product={product} />\n        </Card>\n      </div>\n    </>\n  );\n};\n\nexport default SingleProduct;\n","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\cards\\ShowPaymentInfo.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\home\\NewArrivals.js",["366"],"import React, { useState, useEffect } from \"react\";\nimport { getProducts, getProductsCount } from \"../../api/product\";\nimport { ProductCard, LoadingCard } from \"../../components\";\nimport { Pagination } from \"antd\";\n\nconst NewArrivals = () => {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [productsCount, setProductsCount] = useState(0);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    loadAllProducts();\n  }, [page]);\n\n  useEffect(() => {\n    getProductsCount().then((res) => {\n      setProductsCount(res.data);\n    });\n  });\n\n  const loadAllProducts = () => {\n    setLoading(true);\n    // sort, order, limit\n    getProducts(\"createdAt\", \"desc\", page).then((res) => {\n      setProducts(res.data);\n      setLoading(false);\n    });\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        {loading ? (\n          <LoadingCard count={3} />\n        ) : (\n          <div className=\"row\">\n            {products.map((product) => (\n              <div className=\"col-md-4\" key={product._id}>\n                <ProductCard product={product} loading={loading} />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      <div className=\"row\">\n        <nav className=\"col-md-4 offset-md-4 text-center pt-5 p-3\">\n          <Pagination\n            current={page}\n            total={(productsCount / 3) * 10}\n            onChange={(val) => setPage(val)}\n          />\n        </nav>\n      </div>\n    </>\n  );\n};\n\nexport default NewArrivals;\n","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\category\\CategoryList.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\home\\BestSellers.js",["367"],"import React, { useState, useEffect } from \"react\";\nimport { getProducts, getProductsCount } from \"../../api/product\";\nimport { ProductCard, LoadingCard } from \"../../components\";\nimport { Pagination } from \"antd\";\n\nconst BestSellers = () => {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [productsCount, setProductsCount] = useState(0);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    loadAllProducts();\n  }, [page]);\n\n  useEffect(() => {\n    getProductsCount().then((res) => {\n      setProductsCount(res.data);\n    });\n  });\n\n  const loadAllProducts = () => {\n    setLoading(true);\n    // sort, order, limit\n    getProducts(\"sold\", \"desc\", page).then((res) => {\n      setProducts(res.data);\n      setLoading(false);\n    });\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        {loading ? (\n          <LoadingCard count={3} />\n        ) : (\n          <div className=\"row\">\n            {products.map((product) => (\n              <div className=\"col-md-4\" key={product._id}>\n                <ProductCard product={product} loading={loading} />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <div className=\"row\">\n        <nav className=\"col-md-4 offset-md-4 text-center pt-5 p-3\">\n          <Pagination\n            current={page}\n            total={(productsCount / 3) * 10}\n            onChange={(val) => setPage(val)}\n          />\n        </nav>\n      </div>\n    </>\n  );\n};\n\nexport default BestSellers;\n","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\subcategory\\SubcategoryList.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\drawer\\SideDrawer.js",["368","369"],"import React from \"react\";\nimport { Drawer, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport laptop from \"../../images/laptop.png\";\n\nconst SideDrawer = () => {\n  const dispatch = useDispatch();\n  const { drawer, cart } = useSelector((state) => ({ ...state }));\n\n  const imageStyle = {\n    width: \"100%\",\n    height: \"50px\",\n    objectFit: \"cover\",\n  };\n\n  return (\n    <Drawer\n      className=\"text-center\"\n      title={`Cart - ${cart.length} Products Added`}\n      closable={false}\n      onClose={() => {\n        dispatch({\n          type: \"SET_VISIBLE\",\n          payload: false,\n        });\n      }}\n      visible={drawer}\n    >\n      {cart.map((p) => (\n        <div key={p._id} className=\"row\">\n          <div className=\"col\">\n            {p.images[0] ? (\n              <>\n                <img src={p.images[0].url} style={imageStyle} />\n                <p className=\"text-center bg-secondary text-light\">\n                  {p.title} x {p.count}\n                </p>\n              </>\n            ) : (\n              <>\n                <img src={laptop} style={imageStyle} />\n                <p className=\"text-center bg-secondary text-light\">\n                  {p.title} x {p.count}\n                </p>\n              </>\n            )}\n          </div>\n        </div>\n      ))}\n      <Link to=\"/cart\">\n        <Button\n          onClick={() => {\n            dispatch({\n              type: \"SET_VISIBLE\",\n              payload: false,\n            });\n          }}\n          className=\"text-center btn btn-primary btn-raised btn-block\"\n        >\n          GO TO CART\n        </Button>\n      </Link>\n    </Drawer>\n  );\n};\n\nexport default SideDrawer;\n","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\order\\Invoice.js",["370"],"import React from \"react\";\nimport { Document, Page, Text, View, StyleSheet } from \"@react-pdf/renderer\";\nimport {\n  Table,\n  TableHeader,\n  TableCell,\n  TableBody,\n  DataTableCell,\n} from \"@david.kucsai/react-pdf-table\";\n\nconst styles = StyleSheet.create({\n  body: {\n    paddingTop: 35,\n    paddingBottom: 65,\n    paddingHorizontal: 35,\n  },\n  title: {\n    fontSize: 24,\n    textAlign: \"center\",\n  },\n  author: {\n    fontSize: 12,\n    textAlign: \"center\",\n    marginBottom: 40,\n  },\n  subtitle: {\n    fontSize: 18,\n    margin: 12,\n  },\n  text: {\n    margin: 12,\n    fontSize: 14,\n    textAlign: \"justify\",\n  },\n  image: {\n    marginVertical: 15,\n    marginHorizontal: 100,\n  },\n  header: {\n    fontSize: 12,\n    marginBottom: 20,\n    textAlign: \"center\",\n    color: \"grey\",\n  },\n  footer: {\n    padding: \"100px\",\n    fontSize: 12,\n    marginBottom: 20,\n    textAlign: \"center\",\n    color: \"grey\",\n  },\n  pageNumber: {\n    position: \"absolute\",\n    fontSize: 12,\n    bottom: 30,\n    left: 0,\n    right: 0,\n    textAlign: \"center\",\n    color: \"grey\",\n  },\n});\n\nconst Invoice = ({ order }) => (\n  <Document>\n    <Page style={styles.body}>\n      <Text style={styles.header} fixed>\n        ~{new Date().toLocaleString()}~\n      </Text>\n      <Text style={styles.title}>Order Invoice</Text>\n      <Text style={styles.author}>Ecommy</Text>\n      <Text style={styles.subtitle}>Order Summary</Text>\n\n      <Table>\n        <TableHeader>\n          <TableCell>Title</TableCell>\n          <TableCell>Price</TableCell>\n          <TableCell>Quantity</TableCell>\n          <TableCell>Brand</TableCell>\n          <TableCell>Color</TableCell>\n        </TableHeader>\n      </Table>\n\n      <Table data={order.products}>\n        <TableBody>\n          <DataTableCell getContent={(x) => x.product.title} />\n          <DataTableCell getContent={(x) => `$${x.product.price}`} />\n          <DataTableCell getContent={(x) => x.count} />\n          <DataTableCell getContent={(x) => x.product.brand} />\n          <DataTableCell getContent={(x) => x.color} />\n        </TableBody>\n      </Table>\n\n      <Text style={styles.text}>\n        <Text>\n          Date: {\"                \"}\n          {new Date(order.paymentIntent.created * 1000).toLocaleString()}\n        </Text>\n        {\"\\n\"}\n        <Text>\n          Order ID: {\"         \"} {order.paymentIntent.id}\n        </Text>\n        {\"\\n\"}\n        <Text>\n          Order Status: {\"  \"} {order.orderStatus}\n        </Text>\n        {\"\\n\"}\n        <Text>\n          Total Paid: {\"       \"} {order.paymentIntent.amount}\n        </Text>\n      </Text>\n\n      <Text style={styles.footer}>~ Thank you for shopping with us!~</Text>\n    </Page>\n  </Document>\n);\n\nexport default Invoice;\n","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\order\\Orders.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\auth\\RegisterComplete.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\auth\\Login.js",["371","372"],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\auth\\ForgotPassword.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\auth\\Register.js",["373"],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\subcategory\\SubcategoryHome.js",["374"],"import React, { useState, useEffect } from \"react\";\nimport { getSubcategory } from \"../../api/subcategory\";\nimport { ProductCard } from \"../../components\";\nimport { useParams } from \"react-router-dom\";\n\nconst SubcategoryHome = () => {\n  const { slug } = useParams();\n  const [subcategory, setSubcategory] = useState();\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getSubcategory(slug)\n      .then((res) => {\n        setSubcategory(res.data.subcategory);\n        setProducts(res.data.products);\n        setLoading(false);\n      })\n      .catch((error) => {\n        setLoading(false);\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col\">\n          {loading ? (\n            <h4 className=\"text-center jumbotron p-3 mt-5 mb-5 display-4\">\n              Loading...\n            </h4>\n          ) : (\n            <h4 className=\"text-center jumbotron p-3 mt-5 mb-5 display-4\">\n              {products.length} Products in \"{subcategory && subcategory.name}\"\n              sub - category\n            </h4>\n          )}\n        </div>\n      </div>\n\n      <div className=\"row\">\n        {products.map((p) => (\n          <div className=\"col-md-3\" key={p._id}>\n            <ProductCard product={p} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SubcategoryHome;\n","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\category\\CategoryHome.js",["375"],"import React, { useState, useEffect } from \"react\";\nimport { getCategory } from \"../../api/category\";\nimport { useParams } from \"react-router-dom\";\nimport { ProductCard } from \"../../components\";\n\nconst CategoryHome = () => {\n  const { slug } = useParams();\n  const [category, setCategory] = useState();\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getCategory(slug)\n      .then((res) => {\n        setCategory(res.data.category);\n        setProducts(res.data.products);\n        setLoading(false);\n      })\n      .catch((error) => {\n        setLoading(false);\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col\">\n          {loading ? (\n            <h4 className=\"text-center jumbotron p-3 mt-5 mb-5 display-4\">\n              Loading...\n            </h4>\n          ) : (\n            <h4 className=\"text-center jumbotron p-3 mt-5 mb-5 display-4\">\n              {products.length} Products in \"{category && category.name}\"\n              category\n            </h4>\n          )}\n        </div>\n      </div>\n\n      <div className=\"row\">\n        {products.map((p) => (\n          <div className=\"col-md-3\" key={p._id}>\n            <ProductCard product={p} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CategoryHome;\n","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\user\\Password.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\user\\History.js",["376","377","378"],"import React, { useEffect, useState } from \"react\";\nimport { UserNav, ShowPaymentInfo, Invoice } from \"../../components\";\nimport { getUserOrders } from \"../../api/user\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\nimport { toast } from \"react-toastify\";\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\n\nconst History = () => {\n  const { user } = useSelector((state) => ({ ...state }));\n  const [orders, setOrders] = useState([]);\n\n  useEffect(() => {\n    loadUserOrders();\n  }, []);\n\n  const loadUserOrders = () => {\n    getUserOrders(user.token).then((res) => {\n      setOrders(res.data);\n      console.log(res.data);\n    });\n  };\n\n  const showEachOrders = () =>\n    orders.reverse().map((o, i) => (\n      <div key={i} className=\"m-5 p-3 card\">\n        <ShowPaymentInfo order={o} />\n        {showOrderInTable(o)}\n        <div className=\"row\">\n          <div className=\"col\">{showDownloadLink(o)}</div>\n        </div>\n      </div>\n    ));\n\n  const showDownloadLink = (order) => (\n    <PDFDownloadLink\n      document={<Invoice order={order} />}\n      fileName=\"invoice.pdf\"\n      className=\"btn btn-sm btn-block btn-outline-primary\"\n    >\n      Download PDF\n    </PDFDownloadLink>\n  );\n\n  const showOrderInTable = (order) => (\n    <table className=\"table table-bordered\">\n      <thead className=\"thead-light\">\n        <tr>\n          <th scope=\"col\">Title</th>\n          <th scope=\"col\">Price</th>\n          <th scope=\"col\">Brand</th>\n          <th scope=\"col\">Color</th>\n          <th scope=\"col\">Count</th>\n          <th scope=\"col\">Shipping</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {order.products.map((p, i) => (\n          <tr key={i}>\n            <td>\n              <b>{p.product.title}</b>\n            </td>\n            <td> {p.product.price}</td>\n            <td> {p.product.brand}</td>\n            <td> {p.color}</td>\n            <td> {p.count}</td>\n            <td>\n              {\" \"}\n              {p.product.shipping === \"Yes\" ? (\n                <CheckCircleOutlined style={{ color: \"green\" }} />\n              ) : (\n                <CloseCircleOutlined style={{ color: \"red\" }} />\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"colmd-2\">\n          <UserNav />\n        </div>\n        <div className=\"col text-center\">\n          {orders.length > 0 ? (\n            <h4>Previous orders</h4>\n          ) : (\n            <h4>No orders yet</h4>\n          )}\n\n          {showEachOrders()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default History;\n","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\admin\\AdminDashboard.js",["379","380"],"import React, { useState, useEffect } from \"react\";\nimport { AdminNav, Orders } from \"../../components\";\nimport { getAllOrders, updateOrderStatus } from \"../../api/admin\";\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\n\nconst AdminDashboard = () => {\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const { user } = useSelector((state) => ({ ...state }));\n\n  useEffect(() => {\n    loadAllOrders();\n  }, []);\n\n  const loadAllOrders = () => {\n    setLoading(true);\n    getAllOrders(user.token).then((res) => {\n      setOrders(res.data);\n      setLoading(false);\n    });\n  };\n\n  const handleOrderStatusUpdate = (orderId, orderStatus) => {\n    setLoading(true);\n    updateOrderStatus(orderId, orderStatus, user.token).then((res) => {\n      toast.success(\"Order status changed\");\n      setLoading(false);\n      loadAllOrders();\n    });\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"colmd-2\">\n          <AdminNav />\n        </div>\n        <div className=\"col\">\n          <h4>Dashboard</h4>\n          <Orders\n            orders={orders}\n            handleStatusChange={handleOrderStatusUpdate}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\user\\Wishlist.js",["381","382"],"import React, { useState, useEffect } from \"react\";\nimport { UserNav } from \"../../components\";\nimport { getWishlist, removeWishlist } from \"../../api/user\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\n\nconst Wishlist = () => {\n  const [UserWishlist, setUserWishlist] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { user } = useSelector((state) => ({ ...state }));\n\n  useEffect(() => {\n    loadAllWishlist();\n  }, []);\n\n  const loadAllWishlist = () => {\n    setLoading(true);\n    getWishlist(user.token).then((res) => {\n      setUserWishlist(res.data[0].wishlist);\n      // console.log(res.data[0].wishlist);\n      setLoading(false);\n    });\n  };\n\n  const handleRemoveWishlist = (productId) => {\n    removeWishlist(productId, user.token).then((res) => {\n      loadAllWishlist();\n    });\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"colmd-2\">\n          <UserNav />\n        </div>\n        <div className=\"col\">\n          <h4>Wishlist</h4>\n          {UserWishlist.map((p) => (\n            <div key={p._id} className=\"alert alert-secondary\">\n              <Link to={`/product/${p.slug}`}>{p.title}</Link>\n              <span\n                className=\"btn btn-sm float-right\"\n                onClick={() => handleRemoveWishlist(p._id)}\n              >\n                <DeleteOutlined />\n              </span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Wishlist;\n","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\admin\\subcategory\\SubcategoryUpdate.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\admin\\category\\CategoryUpdate.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\admin\\product\\ProductCreate.js",["383"],"import React, { useState, useEffect } from \"react\";\nimport { AdminNav, ProductCreateForm, FileUpload } from \"../../../components\";\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { getCategories } from \"../../../api/category\";\nimport { createProduct } from \"../../../api/product\";\nimport { getCategorySubs } from \"../../../api/category\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nconst initialState = {\n  title: \"\",\n  description: \"\",\n  price: \"\",\n  categories: [],\n  category: \"\",\n  subcategories: [],\n  shipping: \"\",\n  quantity: \"\",\n  images: [],\n  colors: [\"Black\", \"Brown\", \"Silver\", \"Blue\", \"White\"],\n  brands: [\n    \"Apple\",\n    \"Lenovo\",\n    \"Samsung\",\n    \"Microsoft\",\n    \"ASUS\",\n    \"MSI\",\n    \"HP\",\n    \"Acer\",\n  ],\n  color: \"\",\n  brand: \"\",\n};\n\nconst ProductCreate = ({ history }) => {\n  const [values, setValues] = useState(initialState);\n  const [subOptions, setSubOptions] = useState([]);\n  const [showSub, setShowSub] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const { user } = useSelector((state) => ({ ...state }));\n\n  useEffect(() => {\n    loadCategories();\n  }, []);\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setValues({ ...values, [e.target.name]: e.target.value });\n    // console.log({ ...values, [e.target.name]: e.target.value });\n  };\n\n  const handleCatChange = (e) => {\n    e.preventDefault();\n    setValues({ ...values, subcategories: [], category: e.target.value });\n    setShowSub(true);\n    getCategorySubs(e.target.value).then((res) => {\n      setSubOptions(res.data);\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    createProduct(user.token, { ...values })\n      .then((res) => {\n        toast.success(`\"${res.data.title}\" is created`);\n        history.push(\"/admin/products\");\n      })\n      .catch((error) => {\n        // if (error.response.status === 400) toast.error(error.response.data);\n        toast.error(error.response.data.err);\n        console.log(error);\n      });\n  };\n\n  const loadCategories = () => {\n    getCategories().then((res) => {\n      setValues({ ...values, categories: res.data });\n    });\n  };\n\n  const handleSetSubs = (value) => {\n    // e.preventDefault();\n    setValues({ ...values, subcategories: value });\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"colmd-2\">\n          <AdminNav />\n        </div>\n        <div className=\"col-md-10\">\n          {loading ? (\n            <LoadingOutlined className=\"text-danger h1\" />\n          ) : (\n            <h4>Create Product</h4>\n          )}\n          <hr />\n          <div className=\"p-3\">\n            <FileUpload\n              values={values}\n              setValues={setValues}\n              setLoading={setLoading}\n            />\n          </div>\n          <ProductCreateForm\n            handleSubmit={handleSubmit}\n            handleChange={handleChange}\n            handleCatChange={handleCatChange}\n            values={values}\n            subOptions={subOptions}\n            handleSetSubs={handleSetSubs}\n            showSub={showSub}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductCreate;\n","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\admin\\subcategory\\SubcategoryCreate.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\admin\\product\\ProductUpdate.js",["384","385"],"import React, { useState, useEffect } from \"react\";\nimport { AdminNav, FileUpload, ProductUpdateForm } from \"../../../components\";\nimport { useSelector } from \"react-redux\";\nimport { getProduct, updateProduct } from \"../../../api/product\";\nimport { getCategories, getCategorySubs } from \"../../../api/category\";\nimport { useParams } from \"react-router-dom\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { toast } from \"react-toastify\";\n\nconst initialState = {\n  title: \"\",\n  description: \"\",\n  price: \"\",\n  category: \"\",\n  shipping: \"\",\n  quantity: \"\",\n  images: [],\n  colors: [\"Black\", \"Brown\", \"Silver\", \"Blue\", \"White\"],\n  brands: [\"Apple\", \"Lenovo\", \"Samsung\", \"Microsoft\", \"ASUS\"],\n  color: \"\",\n  brand: \"\",\n};\n\nconst ProductUpdate = ({ history }) => {\n  const { slug } = useParams();\n\n  const [values, setValues] = useState(initialState);\n  const [categories, setCategories] = useState([]);\n  const [subOptions, setSubOptions] = useState([]);\n  const [arrayOfSubIds, setArrayOfSubIds] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const { user } = useSelector((state) => ({ ...state }));\n\n  useEffect(() => {\n    loadProduct();\n    loadCategories();\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    values.subcategories = arrayOfSubIds;\n    values.category = selectedCategory ? selectedCategory : values.category;\n\n    updateProduct(user.token, slug, values)\n      .then((res) => {\n        setLoading(false);\n        toast.success(`${res.data.title} is updated`);\n        history.push(\"/admin/products\");\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        toast.error(err.response.data.err);\n      });\n  };\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setValues({ ...values, [e.target.name]: e.target.value });\n    // console.log({ ...values, [e.target.name]: e.target.value });\n  };\n\n  const handleCatChange = (e) => {\n    e.preventDefault();\n    setValues({ ...values, subcategories: [] });\n\n    setSelectedCategory(e.target.value);\n    getCategorySubs(e.target.value).then((res) => {\n      setSubOptions(res.data);\n    });\n\n    if (values.category._id === e.target.value) {\n      loadProduct();\n    }\n\n    setArrayOfSubIds([]);\n  };\n\n  const handleSetSubs = () => {\n    //\n  };\n\n  const loadCategories = () => {\n    getCategories().then((res) => {\n      setCategories(res.data);\n    });\n  };\n\n  const loadProduct = () => {\n    setLoading(true);\n    getProduct(slug)\n      .then((res) => {\n        setLoading(false);\n        setValues({ ...values, ...res.data });\n        getCategorySubs(res.data.category._id).then((r) => {\n          setSubOptions(r.data);\n        });\n        let arr = [];\n        res.data.subcategories.map((s) => {\n          arr.push(s._id);\n        });\n        setArrayOfSubIds((prev) => arr);\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n      });\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"colmd-2\">\n          <AdminNav />\n        </div>\n        <div className=\"col-md-10\">\n          {loading ? (\n            <LoadingOutlined className=\"text-danger h1\" />\n          ) : (\n            <h4>Update Product</h4>\n          )}\n\n          <hr />\n          {values && (\n            <>\n              <div className=\"p-3\">\n                <FileUpload\n                  values={values}\n                  setValues={setValues}\n                  setLoading={setLoading}\n                />\n              </div>\n              <ProductUpdateForm\n                handleSubmit={handleSubmit}\n                handleChange={handleChange}\n                handleCatChange={handleCatChange}\n                values={values}\n                subOptions={subOptions}\n                handleSetSubs={handleSetSubs}\n                categories={categories}\n                arrayOfSubIds={arrayOfSubIds}\n                setArrayOfSubIds={setArrayOfSubIds}\n                selectedCategory={selectedCategory}\n              />\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductUpdate;\n","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\admin\\coupons\\CreateCoupon.js",["386"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { createCoupon, removeCoupon, getCoupons } from \"../../../api/coupon\";\nimport DatePicker from \"react-datepicker\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { AdminNav } from \"../../../components\";\n\nconst CreateCoupon = () => {\n  const [name, setName] = useState(\"\");\n  const [expiry, setExpiry] = useState(\"\");\n  const [discount, setDiscount] = useState(\"\");\n  const [loading, setLoading] = useState(\"\");\n  const [coupons, setCoupons] = useState([]);\n\n  const { user } = useSelector((state) => ({ ...state }));\n\n  useEffect(() => {\n    loadAllCoupons();\n  }, []);\n\n  const loadAllCoupons = () => {\n    getCoupons().then((res) => {\n      setCoupons(res.data);\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    createCoupon({ name, expiry, discount }, user.token)\n      .then((res) => {\n        setLoading(false);\n        setName(\"\");\n        setDiscount(\"\");\n        setExpiry(\"\");\n        toast.success(`${res.data.name} is created`);\n        loadAllCoupons();\n      })\n      .catch((error) => {\n        console.log(\"CREATE COUPON ERROR\", error);\n      });\n  };\n\n  const handleDeleteCoupon = (id) => {\n    // console.log(id);\n    if (window.confirm(\"Delete?\")) {\n      setLoading(true);\n      removeCoupon(id, user.token).then((res) => {\n        setLoading(false);\n        loadAllCoupons();\n        toast.error(`${res.data.name} Deleted`);\n      });\n    }\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-2\">\n          <AdminNav />\n        </div>\n\n        <div className=\"col-md-10\">\n          {loading ? (\n            <h4 className=\"text-danger\">Loading...</h4>\n          ) : (\n            <h4>Coupon</h4>\n          )}\n\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label className=\"text-muted\">Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                onChange={(e) => setName(e.target.value)}\n                value={name}\n                autoFocus\n                required\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"text-muted\">Discount %</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={discount}\n                onChange={(e) => setDiscount(e.target.value)}\n                required\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"text-muted\">Expiry</label>\n              <br />\n              <DatePicker\n                className=\"form-control\"\n                selected={new Date()}\n                value={expiry}\n                required\n                onChange={(date) => setExpiry(date)}\n              />\n            </div>\n\n            <button className=\"btn btn-outline-primary\">Save</button>\n          </form>\n\n          <br />\n\n          <h4>{coupons.length} Coupons</h4>\n\n          <table className=\"table table-bordered\">\n            <thead className=\"thead-light\">\n              <tr>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Expiry</th>\n                <th scope=\"col\">Discount</th>\n                <th scope=\"col\">Action</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {coupons.map((c) => (\n                <tr key={c._id}>\n                  <td>{c.name}</td>\n                  <td>{new Date(c.expiry).toLocaleDateString()}</td>\n                  <td>{c.discount}</td>\n                  <td>\n                    <DeleteOutlined\n                      className=\"text-danger pointer\"\n                      onClick={() => handleDeleteCoupon(c._id)}\n                    />\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateCoupon;\n","C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\admin\\category\\CategoryCreate.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\admin\\product\\AllProducts.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\api\\user.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\api\\product.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\api\\subcategory.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\api\\stripe.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\api\\category.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\api\\coupon.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\api\\admin.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\api\\rating.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\cards\\ProductListItems.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\modal\\RatingModal.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\LoadingToRedirect.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\components\\forms\\Search.js",[],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\LoginPage.js",["387","388","389","390","391"],"C:\\Users\\imran\\OneDrive\\Desktop\\ecommy-main\\client\\src\\views\\ListPage.js",["392","393","394","395","396"],{"ruleId":"397","replacedBy":"398"},{"ruleId":"399","replacedBy":"400"},{"ruleId":"401","severity":1,"message":"402","line":42,"column":6,"nodeType":"403","endLine":42,"endColumn":8,"suggestions":"404"},{"ruleId":"405","severity":1,"message":"406","line":3,"column":3,"nodeType":"407","messageId":"408","endLine":3,"endColumn":12},{"ruleId":"405","severity":1,"message":"409","line":4,"column":3,"nodeType":"407","messageId":"408","endLine":4,"endColumn":14},{"ruleId":"405","severity":1,"message":"410","line":5,"column":3,"nodeType":"407","messageId":"408","endLine":5,"endColumn":14},{"ruleId":"405","severity":1,"message":"411","line":6,"column":3,"nodeType":"407","messageId":"408","endLine":6,"endColumn":15},{"ruleId":"405","severity":1,"message":"412","line":7,"column":3,"nodeType":"407","messageId":"408","endLine":7,"endColumn":18},{"ruleId":"401","severity":1,"message":"413","line":16,"column":6,"nodeType":"403","endLine":16,"endColumn":12,"suggestions":"414"},{"ruleId":"401","severity":1,"message":"415","line":18,"column":3,"nodeType":"407","endLine":18,"endColumn":12,"suggestions":"416"},{"ruleId":"405","severity":1,"message":"417","line":14,"column":18,"nodeType":"407","messageId":"408","endLine":14,"endColumn":27},{"ruleId":"405","severity":1,"message":"418","line":24,"column":10,"nodeType":"407","messageId":"408","endLine":24,"endColumn":30},{"ruleId":"405","severity":1,"message":"419","line":25,"column":10,"nodeType":"407","messageId":"408","endLine":25,"endColumn":14},{"ruleId":"405","severity":1,"message":"420","line":26,"column":18,"nodeType":"407","messageId":"408","endLine":26,"endColumn":27},{"ruleId":"405","severity":1,"message":"421","line":37,"column":18,"nodeType":"407","messageId":"408","endLine":37,"endColumn":27},{"ruleId":"405","severity":1,"message":"422","line":45,"column":20,"nodeType":"407","messageId":"408","endLine":45,"endColumn":31},{"ruleId":"401","severity":1,"message":"423","line":102,"column":6,"nodeType":"403","endLine":102,"endColumn":10,"suggestions":"424"},{"ruleId":"401","severity":1,"message":"425","line":33,"column":6,"nodeType":"403","endLine":33,"endColumn":8,"suggestions":"426"},{"ruleId":"405","severity":1,"message":"427","line":6,"column":10,"nodeType":"407","messageId":"408","endLine":6,"endColumn":15},{"ruleId":"405","severity":1,"message":"428","line":20,"column":5,"nodeType":"407","messageId":"408","endLine":20,"endColumn":13},{"ruleId":"405","severity":1,"message":"429","line":22,"column":5,"nodeType":"407","messageId":"408","endLine":22,"endColumn":13},{"ruleId":"405","severity":1,"message":"430","line":24,"column":5,"nodeType":"407","messageId":"408","endLine":24,"endColumn":11},{"ruleId":"405","severity":1,"message":"431","line":27,"column":5,"nodeType":"407","messageId":"408","endLine":27,"endColumn":10},{"ruleId":"405","severity":1,"message":"432","line":28,"column":5,"nodeType":"407","messageId":"408","endLine":28,"endColumn":10},{"ruleId":"405","severity":1,"message":"433","line":18,"column":11,"nodeType":"407","messageId":"408","endLine":18,"endColumn":15},{"ruleId":"405","severity":1,"message":"434","line":18,"column":17,"nodeType":"407","messageId":"408","endLine":18,"endColumn":21},{"ruleId":"435","severity":1,"message":"436","line":76,"column":13,"nodeType":"437","endLine":76,"endColumn":66},{"ruleId":"438","severity":1,"message":"439","line":26,"column":28,"nodeType":"440","messageId":"441","endLine":26,"endColumn":30},{"ruleId":"438","severity":1,"message":"439","line":55,"column":28,"nodeType":"440","messageId":"441","endLine":55,"endColumn":30},{"ruleId":"405","severity":1,"message":"442","line":3,"column":10,"nodeType":"407","messageId":"408","endLine":3,"endColumn":14},{"ruleId":"405","severity":1,"message":"443","line":13,"column":23,"nodeType":"407","messageId":"408","endLine":13,"endColumn":37},{"ruleId":"405","severity":1,"message":"433","line":28,"column":11,"nodeType":"407","messageId":"408","endLine":28,"endColumn":15},{"ruleId":"435","severity":1,"message":"436","line":110,"column":15,"nodeType":"437","endLine":110,"endColumn":68},{"ruleId":"435","severity":1,"message":"436","line":115,"column":13,"nodeType":"437","endLine":115,"endColumn":46},{"ruleId":"401","severity":1,"message":"444","line":14,"column":6,"nodeType":"403","endLine":14,"endColumn":12,"suggestions":"445"},{"ruleId":"401","severity":1,"message":"444","line":14,"column":6,"nodeType":"403","endLine":14,"endColumn":12,"suggestions":"446"},{"ruleId":"447","severity":1,"message":"448","line":35,"column":17,"nodeType":"437","endLine":35,"endColumn":65},{"ruleId":"447","severity":1,"message":"448","line":42,"column":17,"nodeType":"437","endLine":42,"endColumn":56},{"ruleId":"405","severity":1,"message":"449","line":2,"column":32,"nodeType":"407","messageId":"408","endLine":2,"endColumn":36},{"ruleId":"405","severity":1,"message":"450","line":5,"column":24,"nodeType":"407","messageId":"408","endLine":5,"endColumn":38},{"ruleId":"405","severity":1,"message":"451","line":90,"column":9,"nodeType":"407","messageId":"408","endLine":90,"endColumn":26},{"ruleId":"405","severity":1,"message":"452","line":8,"column":20,"nodeType":"407","messageId":"408","endLine":8,"endColumn":31},{"ruleId":"401","severity":1,"message":"453","line":24,"column":6,"nodeType":"403","endLine":24,"endColumn":8,"suggestions":"454"},{"ruleId":"401","severity":1,"message":"453","line":24,"column":6,"nodeType":"403","endLine":24,"endColumn":8,"suggestions":"455"},{"ruleId":"405","severity":1,"message":"456","line":4,"column":23,"nodeType":"407","messageId":"408","endLine":4,"endColumn":34},{"ruleId":"405","severity":1,"message":"427","line":6,"column":10,"nodeType":"407","messageId":"408","endLine":6,"endColumn":15},{"ruleId":"401","severity":1,"message":"457","line":15,"column":6,"nodeType":"403","endLine":15,"endColumn":8,"suggestions":"458"},{"ruleId":"405","severity":1,"message":"459","line":9,"column":10,"nodeType":"407","messageId":"408","endLine":9,"endColumn":17},{"ruleId":"401","severity":1,"message":"460","line":15,"column":6,"nodeType":"403","endLine":15,"endColumn":8,"suggestions":"461"},{"ruleId":"405","severity":1,"message":"459","line":10,"column":10,"nodeType":"407","messageId":"408","endLine":10,"endColumn":17},{"ruleId":"401","severity":1,"message":"462","line":15,"column":6,"nodeType":"403","endLine":15,"endColumn":8,"suggestions":"463"},{"ruleId":"401","severity":1,"message":"464","line":44,"column":6,"nodeType":"403","endLine":44,"endColumn":8,"suggestions":"465"},{"ruleId":"401","severity":1,"message":"466","line":38,"column":6,"nodeType":"403","endLine":38,"endColumn":8,"suggestions":"467"},{"ruleId":"438","severity":1,"message":"439","line":102,"column":40,"nodeType":"440","messageId":"441","endLine":102,"endColumn":42},{"ruleId":"405","severity":1,"message":"456","line":2,"column":23,"nodeType":"407","messageId":"408","endLine":2,"endColumn":34},{"ruleId":"405","severity":1,"message":"406","line":3,"column":3,"nodeType":"407","messageId":"408","endLine":3,"endColumn":12},{"ruleId":"405","severity":1,"message":"409","line":4,"column":3,"nodeType":"407","messageId":"408","endLine":4,"endColumn":14},{"ruleId":"405","severity":1,"message":"410","line":5,"column":3,"nodeType":"407","messageId":"408","endLine":5,"endColumn":14},{"ruleId":"405","severity":1,"message":"411","line":6,"column":3,"nodeType":"407","messageId":"408","endLine":6,"endColumn":15},{"ruleId":"405","severity":1,"message":"412","line":7,"column":3,"nodeType":"407","messageId":"408","endLine":7,"endColumn":18},{"ruleId":"405","severity":1,"message":"406","line":5,"column":3,"nodeType":"407","messageId":"408","endLine":5,"endColumn":12},{"ruleId":"405","severity":1,"message":"409","line":6,"column":3,"nodeType":"407","messageId":"408","endLine":6,"endColumn":14},{"ruleId":"405","severity":1,"message":"410","line":7,"column":3,"nodeType":"407","messageId":"408","endLine":7,"endColumn":14},{"ruleId":"405","severity":1,"message":"411","line":8,"column":3,"nodeType":"407","messageId":"408","endLine":8,"endColumn":15},{"ruleId":"405","severity":1,"message":"412","line":9,"column":3,"nodeType":"407","messageId":"408","endLine":9,"endColumn":18},"no-native-reassign",["468"],"no-negated-in-lhs",["469"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'coupon' and 'user.token'. Either include them or remove the dependency array.","ArrayExpression",["470"],"no-unused-vars","'Jumbotron' is defined but never used.","Identifier","unusedVar","'NewArrivals' is defined but never used.","'BestSellers' is defined but never used.","'CategoryList' is defined but never used.","'SubcategoryList' is defined but never used.","React Hook useEffect has a missing dependency: 'loadSingleProduct'. Either include it or remove the dependency array.",["471"],"React Hook useEffect contains a call to 'setStar'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [product.ratings, user] as a second argument to the useEffect Hook.",["472"],"'ItemGroup' is assigned a value but never used.","'checkedSubCategories' is assigned a value but never used.","'star' is assigned a value but never used.","'setBrands' is assigned a value but never used.","'setColors' is assigned a value but never used.","'setShipping' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'price'. Either include it or remove the dependency array.",["473"],"React Hook useEffect has a missing dependency: 'user.token'. Either include it or remove the dependency array.",["474"],"'toast' is defined but never used.","'category' is assigned a value but never used.","'shipping' is assigned a value but never used.","'images' is assigned a value but never used.","'color' is assigned a value but never used.","'brand' is assigned a value but never used.","'cart' is assigned a value but never used.","'user' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Link' is defined but never used.","'removeWishlist' is defined but never used.","React Hook useEffect has a missing dependency: 'loadAllProducts'. Either include it or remove the dependency array.",["475"],["476"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'View' is defined but never used.","'GoogleOutlined' is defined but never used.","'handleGoogleLogin' is assigned a value but never used.","'setPassword' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.",["477"],["478"],"'useDispatch' is defined but never used.","React Hook useEffect has a missing dependency: 'loadUserOrders'. Either include it or remove the dependency array.",["479"],"'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadAllOrders'. Either include it or remove the dependency array.",["480"],"React Hook useEffect has a missing dependency: 'loadAllWishlist'. Either include it or remove the dependency array.",["481"],"React Hook useEffect has a missing dependency: 'loadCategories'. Either include it or remove the dependency array.",["482"],"React Hook useEffect has a missing dependency: 'loadProduct'. Either include it or remove the dependency array.",["483"],"no-global-assign","no-unsafe-negation",{"desc":"484","fix":"485"},{"desc":"486","fix":"487"},{"desc":"488","fix":"489"},{"desc":"490","fix":"491"},{"desc":"492","fix":"493"},{"desc":"494","fix":"495"},{"desc":"494","fix":"496"},{"desc":"497","fix":"498"},{"desc":"497","fix":"499"},{"desc":"500","fix":"501"},{"desc":"502","fix":"503"},{"desc":"504","fix":"505"},{"desc":"506","fix":"507"},{"desc":"508","fix":"509"},"Update the dependencies array to be: [coupon, user.token]",{"range":"510","text":"511"},"Update the dependencies array to be: [loadSingleProduct, slug]",{"range":"512","text":"513"},"Add dependencies array: [product.ratings, user]",{"range":"514","text":"515"},"Update the dependencies array to be: [ok, price]",{"range":"516","text":"517"},"Update the dependencies array to be: [user.token]",{"range":"518","text":"519"},"Update the dependencies array to be: [loadAllProducts, page]",{"range":"520","text":"521"},{"range":"522","text":"521"},"Update the dependencies array to be: [slug]",{"range":"523","text":"524"},{"range":"525","text":"524"},"Update the dependencies array to be: [loadUserOrders]",{"range":"526","text":"527"},"Update the dependencies array to be: [loadAllOrders]",{"range":"528","text":"529"},"Update the dependencies array to be: [loadAllWishlist]",{"range":"530","text":"531"},"Update the dependencies array to be: [loadCategories]",{"range":"532","text":"533"},"Update the dependencies array to be: [loadProduct]",{"range":"534","text":"535"},[1501,1503],"[coupon, user.token]",[594,600],"[loadSingleProduct, slug]",[863,863],", [product.ratings, user]",[2802,2806],"[ok, price]",[1078,1080],"[user.token]",[486,492],"[loadAllProducts, page]",[486,492],[725,727],"[slug]",[701,703],[575,577],"[loadUserOrders]",[487,489],"[loadAllOrders]",[533,535],"[loadAllWishlist]",[1163,1165],"[loadCategories]",[1261,1263],"[loadProduct]"]